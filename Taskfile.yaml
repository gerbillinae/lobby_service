version: '3'

tasks:
  _package_test:
    dotenv: ['.public.env', '.deployment.env']
    cmds:
      - docker run -d -p 8080:8080 ${IMAGE_NAMESPACE}/${IMAGE_NAME}
      - defer: docker ps -a | grep ${IMAGE_NAMESPACE}/${IMAGE_NAME} | awk '{print $1}' | xargs -n 1 docker kill | xargs -n 1 docker remove
      - python3 test.py --address "${LOCAL_URL}"

  package:
    dotenv: ['.public.env', '.deployment.env']
    cmds:
      - GOOS=linux GOARCH=${ARCH} go build -o main ./main.go
      - IMAGE_VERSION=$(git rev-parse HEAD) go run ./tools/hydrate.go package.template.env > package.env
      - docker build --platform linux/${ARCH} -t ${IMAGE_NAMESPACE}/${IMAGE_NAME}:latest  -f ./Dockerfile .
      - docker tag ${IMAGE_NAMESPACE}/${IMAGE_NAME}:latest ${IMAGE_NAMESPACE}/${IMAGE_NAME}:$(git rev-parse HEAD)
      - echo ${IMAGE_NAMESPACE}/${IMAGE_NAME}:$(git rev-parse --short HEAD)
      - task: _package_test

  _push_container_to_aws_ecr:
    dotenv: ['.public.env', '.deployment.env']
    cmds:
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${CONTAINER_REGISTRY}
      - aws ecr create-repository --repository-name ${IMAGE_NAMESPACE}/${IMAGE_NAME} || true
      - docker tag ${IMAGE_NAMESPACE}/${IMAGE_NAME}:$(git rev-parse HEAD) ${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:$(git rev-parse HEAD)
      - docker push ${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:$(git rev-parse HEAD)

  _generate_deployment_files:
    dotenv: ['.deployment.env', '.public.env']
    cmds:
      - rm -r deployment || true
      - mkdir deployment
      - IMAGE_VERSION=$(git rev-parse HEAD) go run ./tools/hydrate.go ./k8s-deployment.template.yaml > ./deployment/k8s-deployment.yaml

  deploy:
    dotenv: ['.deployment.env']
    preconditions:
      - sh: git diff-index --quiet HEAD || false
        msg: "The current git repository is dirty."
    cmds:
      - task: package
      - task: _generate_deployment_files
      - task: _push_container_to_aws_ecr
      - kubectl apply -f ./deployment/k8s-deployment.yaml

  deployment-test:
    dotenv: ['.deployment.env']
    cmds:
      - python3 test.py --address "${DEPLOYMENT_URL}"
